name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target-archs: x86
          - os: windows-latest
            target-archs: x86

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Checkout AMBuild
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/ambuild
          path: ambuild
      
      - name: Install AMBuild
        uses: BSFishy/pip-action@v1
        with:
          packages: ./ambuild
    
      - name: Install library
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo add-apt-repository ppa:boost-latest/ppa
          sudo apt-get update
          sudo apt install -yq --no-install-recommends gcc-multilib g++-multilib libboost-dev:i386 libssl-dev:i386
        shell: pwsh

      - name: Build Jansson for Linux
        if: runner.os == 'Linux'
        run: |
          mkdir ${{github.workspace}}/jansson/build
          cd ${{github.workspace}}/jansson/build
          cmake -DCMAKE_C_FLAGS=-m32 -DJANSSON_BUILD_SHARED_LIBS=0 -DJANSSON_BUILD_DOCS=OFF ..
          cmake --build .

      - name: Configure Linux CMake
        if: runner.os == 'Linux'
        run: cmake -B ${{github.workspace}}/build/package -D "TARGET=Linux" -D "CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}" -D "JANSSON_LIBRARYDIR=${{github.workspace}}/jansson/build/lib"
      
      - name: Build For Linux
        if: runner.os == 'Linux'
        run: cmake --build ${{github.workspace}}/build/package --config ${{env.BUILD_TYPE}}
      
      - name: Build For Windows
        if: runner.os == 'Windows'
        run: |
          mkdir ${{github.workspace}}/build
          cd ${{github.workspace}}/build
          python ../configure.py --sm-path ../sourcemod
          ambuild

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}
          path: ${{github.workspace}}/build/package